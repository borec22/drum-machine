{"version":3,"sources":["components/DrumPad/DrumPad.tsx","components/Keaboard/Keaboard.tsx","App.tsx","reportWebVitals.ts","index.tsx","assets/audio/piano-cords/Chord_1.mp3","assets/audio/piano-cords/Chord_2.mp3","assets/audio/piano-cords/Chord_3.mp3","assets/audio/piano-cords/Chord_4.mp3","assets/audio/piano-cords/Chord_5.mp3","assets/audio/piano-cords/Chord_6.mp3","assets/audio/piano-cords/Chord_7.mp3","assets/audio/piano-cords/Chord_8.mp3","assets/audio/piano-cords/Chord_9.mp3"],"names":["DrumPad","props","data","key","audio","title","audioElement","useRef","useState","isActivePad","setIsActivePad","activatePadButton","setTimeout","useEffect","document","addEventListener","onKeyPressHandler","removeEventListener","e","toLowerCase","current","play","setDisplayText","className","onClick","id","style","backgroundColor","ref","src","Keyboard","pads","padsRows","i","length","array","j","push","Grid","sm","item","container","spacing","alignContent","marginLeft","map","row","index","pad","App","displayText","direction","justify","alignItems","md","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8de5c2bf.chunk.js","sourcesContent":["import './DrumPad.css';\nimport React, {useEffect, useRef, useState} from 'react';\nimport {Pad} from '../../App';\n\ntype PropsType = {\n   data: Pad\n   setDisplayText: (text: string) => void\n}\n\nexport const DrumPad: React.FC<PropsType> = (props) => {\n   const {data: {key, audio, title}} = props;\n   const audioElement = useRef<HTMLAudioElement>(null);\n\n   const [isActivePad, setIsActivePad] = useState<boolean>(false);\n\n   const activatePadButton = () => {\n      setIsActivePad(true);\n      setTimeout(() => {\n         setIsActivePad(false);\n      }, 200)\n   }\n\n   const stylesActiveButton = {\n      backgroundColor: '#42a5f5'\n   }\n\n   useEffect(() => {\n      document.addEventListener('keydown', onKeyPressHandler)\n\n      return () => {\n         document.removeEventListener('keydown', onKeyPressHandler)\n      }\n   })\n\n   const onClickHandler = () => {\n      if (audioElement && audioElement.current) {\n         audioElement.current.play();\n      }\n      props.setDisplayText(title);\n      activatePadButton();\n   };\n\n   const onKeyPressHandler = (e: KeyboardEvent) => {\n      if (e.key === key.toLowerCase() || e.key === key) {\n         if (audioElement && audioElement.current) {\n            audioElement.current.play();\n\n            activatePadButton();\n         }\n         props.setDisplayText(title);\n      }\n   }\n\n   return (\n      <div className=\"drum-pad\" onClick={onClickHandler} id={title} style={isActivePad ? stylesActiveButton : {}}>\n         {key}\n         <audio ref={audioElement} src={audio} className=\"clip\" id={key}>\n            <source src={audio}/>\n         </audio>\n      </div>\n   );\n}\n\n// https://assets.coderrocketfuel.com/pomodoro-times-up.mp3","import {Grid} from '@material-ui/core';\nimport {DrumPad} from '../DrumPad/DrumPad';\nimport React from 'react';\nimport {Pad} from '../../App';\n\ntype PropsType = {\n   pads: Array<Pad>\n   setDisplayText: (text: string) => void\n};\n\nexport const Keyboard: React.FC<PropsType> = (props) => {\n   const {pads, ...restProps} = props;\n\n   let padsRows = [];\n\n   for (let i = 0; i < pads.length; i += 3) {\n      let array = [];\n\n      for (let j = i; j < i + 3; j++) {\n         array.push(pads[j]);\n      }\n\n      padsRows.push(array);\n   }\n\n   return (\n      <>\n         <Grid id='keyboard' sm={6} item container spacing={1} alignContent='center' style={{marginLeft: '3px'}}>\n            {\n               padsRows.map((row, index) => {\n                  return (\n                     <Grid key={index} container item>\n                        {row.map((pad, index) =>\n                           <Grid key={index} sm={4}>\n                              <DrumPad data={pad} setDisplayText={props.setDisplayText} />\n                           </Grid>)\n                        }\n                     </Grid>\n                  );\n               })\n            }\n         </Grid>\n      </>\n   )\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {createStyles, Grid, makeStyles, Slider, Switch, Theme} from '@material-ui/core';\nimport {VolumeDown, VolumeUp} from '@material-ui/icons';\nimport {Keyboard} from './components/Keaboard/Keaboard';\nimport {isBoolean} from 'util';\n\n// const useStyles = makeStyles((theme: Theme) =>\n//    createStyles({\n//       drumMachine: {\n//\n//       },\n//    }),\n// );\n// import './assets/audio/piano-cords/Chord_1.mp3'\n\nexport type Pad = {\n   key: string,\n   audio: string,\n   title: string,\n}\ntype PropsType = {data: Array<Pad>}\n\n\n\nfunction App(props: PropsType) {\n   const [displayText, setDisplayText] = useState<string>('');\n\n   return (\n      <Grid id='drum-machine' container direction=\"row\" justify=\"center\" alignItems=\"center\">\n         <Grid id=\"wrapper\" container item sm={8} md={4} spacing={9}>\n            <Keyboard pads={props.data} setDisplayText={setDisplayText} />\n            <Grid sm={6} item container justify='center' alignContent='center' spacing={1}>\n               <Grid item container direction='row' justify='center' style={{marginTop: '5px'}}>\n                  <div id='display'>\n                     {displayText}\n                  </div>\n               </Grid>\n            </Grid>\n         </Grid>\n      </Grid>\n   );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App, {Pad} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport audioFile1 from './assets/audio/piano-cords/Chord_1.mp3';\nimport audioFile2 from './assets/audio/piano-cords/Chord_2.mp3';\nimport audioFile3 from './assets/audio/piano-cords/Chord_3.mp3';\nimport audioFile4 from './assets/audio/piano-cords/Chord_4.mp3';\nimport audioFile5 from './assets/audio/piano-cords/Chord_5.mp3';\nimport audioFile6 from './assets/audio/piano-cords/Chord_6.mp3';\nimport audioFile7 from './assets/audio/piano-cords/Chord_7.mp3';\nimport audioFile8 from './assets/audio/piano-cords/Chord_8.mp3';\nimport audioFile9 from './assets/audio/piano-cords/Chord_9.mp3';\n\nconst data: Array<Pad> = [\n   {\n      key: 'Q',\n      audio: audioFile1,\n      title: 'Chord 1'\n   },\n   {\n      key: 'W',\n      audio: audioFile2,\n      title: 'Chord 2'\n   },\n   {\n      key: 'E',\n      audio: audioFile3,\n      title: 'Chord 3'\n   },\n   {\n      key: 'A',\n      audio: audioFile4,\n      title: 'Chord 4'\n   },\n   {\n      key: 'S',\n      audio: audioFile5,\n      title: 'Chord 5'\n   },\n   {\n      key: 'D',\n      audio: audioFile6,\n      title: 'Chord 6'\n   },\n   {\n      key: 'Z',\n      audio: audioFile7,\n      title: 'Chord 7'\n   },\n   {\n      key: 'X',\n      audio: audioFile8,\n      title: 'Chord 8'\n   },\n   {\n      key: 'C',\n      audio: audioFile9,\n      title: 'Chord 9'\n   },\n]\n\nReactDOM.render(\n  <React.StrictMode>\n    <App data={data}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/Chord_1.91f17460.mp3\";","export default __webpack_public_path__ + \"static/media/Chord_2.ce2259f6.mp3\";","export default __webpack_public_path__ + \"static/media/Chord_3.62c6490c.mp3\";","export default __webpack_public_path__ + \"static/media/Chord_4.0e4d4f33.mp3\";","export default __webpack_public_path__ + \"static/media/Chord_5.7d175092.mp3\";","export default __webpack_public_path__ + \"static/media/Chord_6.5d3b3f7f.mp3\";","export default __webpack_public_path__ + \"static/media/Chord_7.248ea259.mp3\";","export default __webpack_public_path__ + \"static/media/Chord_8.0b20ce26.mp3\";","export default __webpack_public_path__ + \"static/media/Chord_9.5f15b714.mp3\";"],"sourceRoot":""}